knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("janitor")
library("scales")
corals <- read_csv("refined_detailed_abundance_phyla_157_corais_matrix_porcentagem_prot_divided_17abr2020.csv")
corals <- read_csv("input/refined_detailed_abundance_phyla_157_corais_matrix_porcentagem_prot_divided_17abr2020.csv")
corals <- read_csv("/input/refined_detailed_abundance_phyla_157_corais_matrix_porcentagem_prot_divided_17abr2020.csv")
corals <- read_csv("/input/refined_detailed_abundance_phyla_157_corais_matrix_porcentagem_prot_divided_17abr2019.csv")
corals <- read_csv("input/refined_detailed_abundance_phyla_157_corais_matrix_porcentagem_prot_divided_17abr2019.csv")
View(corals)
corals <- corals[,-1]
View(corals)
sup_tab <- read_csv("input/SUPP_TABLE_1_2020-06-02.csv") %>% janitor::clean_names()
View(sup_tab)
sup_tab$number_of_sequences
size_cand <- corals %>% janitor::clean_names() %>%
select(contains("candidate"), contains("candidatus")) %>%
transmute(soma_cand = rowSums(.)) %>%
bind_cols(sup_tab) %>%
mutate(
host = str_remove(host_species, pattern = "[[:space:]].*")
) %>%
ggplot(aes(x = number_of_sequences, y = soma_cand)) +
geom_point(color = "gray56", size = 2.5) +
#theme_light() +
labs(x = "Number of Sequences (log)", y = "Total Candidate phyla abundance") +
scale_x_log10() +
scale_y_continuous(labels = scales::percent) +
scale_x_log10(labels = trans_format("log10", math_format(10^.x)))+
theme(axis.title.x = element_text(size=12, family = "sans"),
panel.grid.major = element_blank(),panel.background = element_blank(),
axis.line.y.left = element_line(), axis.line.x.bottom = element_line(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 12, family = "sans"),
axis.text.y = element_text(size = 10, family = "sans"),
axis.text.x = element_text(size = 10, family = "sans"))+
theme(axis.title.y = element_text(size=12, family = "sans"),
#panel.grid.major.y = element_line(colour = "black")
)
size_cand <- corals %>% janitor::clean_names() %>%
select(contains("candidate"), contains("candidatus")) %>%
transmute(soma_cand = rowSums(.)) %>%
bind_cols(sup_tab) %>%
mutate(
host = str_remove(host_species, pattern = "[[:space:]].*")
) %>%
ggplot(aes(x = number_of_sequences, y = soma_cand)) +
geom_point(color = "gray56", size = 2.5) +
#theme_light() +
labs(x = "Number of Sequences (log)", y = "Total Candidate phyla abundance") +
scale_x_log10() +
scale_y_continuous(labels = scales::percent) +
scale_x_log10(labels = trans_format("log10", math_format(10^.x)))+
theme(axis.title.x = element_text(size=12, family = "sans"),
panel.grid.major = element_blank(),panel.background = element_blank(),
axis.line.y.left = element_line(), axis.line.x.bottom = element_line(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 12, family = "sans"),
axis.text.y = element_text(size = 10, family = "sans"),
axis.text.x = element_text(size = 10, family = "sans"))+
theme(axis.title.y = element_text(size=12, family = "sans"),
#panel.grid.major.y = element_line(colour = "black")
)
size_cand <- corals %>% janitor::clean_names() %>%
select(contains("candidate"), contains("candidatus")) %>%
transmute(soma_cand = rowSums(.)) %>%
bind_cols(sup_tab) %>%
mutate(
host = str_remove(host_species, pattern = "[[:space:]].*")
) %>%
ggplot(aes(x = number_of_sequences, y = soma_cand)) +
geom_point(color = "gray56", size = 2.5) +
#theme_light() +
labs(x = "Number of Sequences (log)", y = "Total Candidate phyla abundance") +
scale_x_log10() +
scale_y_continuous(labels = scales::percent) +
scale_x_log10(labels = trans_format("log10", math_format(10^.x)))+
theme(axis.title.x = element_text(size=12, family = "sans"),
panel.grid.major = element_blank(),panel.background = element_blank(),
axis.line.y.left = element_line(), axis.line.x.bottom = element_line(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 12, family = "sans"),
axis.text.y = element_text(size = 10, family = "sans"),
axis.text.x = element_text(size = 10, family = "sans"))+
theme(axis.title.y = element_text(size=12, family = "sans")#,
#panel.grid.major.y = element_line(colour = "black")
)
size_cand <- corals %>% janitor::clean_names() %>%
select(contains("candidate"), contains("candidatus")) %>%
transmute(soma_cand = rowSums(.)) %>%
bind_cols(sup_tab) %>%
mutate(
host = str_remove(host_species, pattern = "[[:space:]].*")
) %>%
ggplot(aes(x = number_of_sequences, y = soma_cand)) +
geom_point(color = "gray56", size = 2.5) +
#theme_light() +
labs(x = "Number of Sequences (log)", y = "Total Candidate phyla abundance") +
scale_x_log10() +
scale_y_continuous(labels = scales::percent) +
scale_x_log10(labels = trans_format("log10", math_format(10^.x)))+
theme(axis.title.x = element_text(size=12, family = "sans"),
panel.grid.major = element_blank(),panel.background = element_blank(),
axis.line.y.left = element_line(), axis.line.x.bottom = element_line(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 12, family = "sans"),
axis.text.y = element_text(size = 10, family = "sans"),
axis.text.x = element_text(size = 10, family = "sans"))#+
size_cand <- corals %>% janitor::clean_names() %>%
select(contains("candidate"), contains("candidatus")) %>%
transmute(soma_cand = rowSums(.)) %>%
bind_cols(sup_tab) %>%
mutate(
host = str_remove(host_species, pattern = "[[:space:]].*")
) %>%
ggplot(aes(x = number_of_sequences, y = soma_cand)) +
geom_point(color = "gray56", size = 2.5) +
#theme_light() +
labs(x = "Number of Sequences (log)", y = "Total Candidate phyla abundance") +
#scale_x_log10() +
scale_y_continuous(labels = scales::percent) +
scale_x_log10(labels = trans_format("log10", math_format(10^.x)))+
theme(axis.title.x = element_text(size=12, family = "sans"),
panel.grid.major = element_blank(),panel.background = element_blank(),
axis.line.y.left = element_line(), axis.line.x.bottom = element_line(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 12, family = "sans"),
axis.text.y = element_text(size = 10, family = "sans"),
axis.text.x = element_text(size = 10, family = "sans"))+
theme(axis.title.y = element_text(size=12, family = "sans")#,
#panel.grid.major.y = element_line(colour = "black")
)
size_cand
size_cand
